{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "OpenAI": {
    "ApiKey": "YOUR_OPENAI_API_KEY_HERE",
    "Model": "gpt-realtime-mini-2025-10-06",
    "RealtimeUrl": "wss://api.openai.com/v1/realtime",
    "Voice": "echo",
    "TranscriptionModel": "gpt-4o-transcribe",
    "SystemPromptFile": "Prompts/OnziemeDocteurWho.md",
    "Temperature": 0.8,
    "MaxResponseOutputTokens": 4096,
    "Instructions": "",
    "TurnDetection": {
      "Type": "server_vad",
      "Threshold": 0.5,
      "PrefixPaddingMs": 300,
      "SilenceDurationMs": 500
    },
    "Tools": [
      {
        "Name": "get_weather",
        "Description": "Obtenir la météo actuelle pour une ville donnée",
        "Type": "builtin",
        "Parameters": {
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Le nom de la ville (ex: Paris, Londres, New York)"
            },
            "unit": {
              "type": "string",
              "enum": ["celsius", "fahrenheit"],
              "description": "L'unité de température"
            }
          },
          "required": ["location"]
        }
      },
      {
        "Name": "get_time",
        "Description": "Obtenir l'heure actuelle dans un fuseau horaire donné",
        "Type": "builtin",
        "Parameters": {
          "type": "object",
          "properties": {
            "timezone": {
              "type": "string",
              "description": "Le fuseau horaire (ex: Europe/Paris, America/New_York)"
            }
          },
          "required": ["timezone"]
        }
      },
      {
        "Name": "calculate",
        "Description": "Effectuer un calcul mathématique simple",
        "Type": "builtin",
        "Parameters": {
          "type": "object",
          "properties": {
            "expression": {
              "type": "string",
              "description": "Expression mathématique à évaluer (ex: 2 + 2, 10 * 5, 100 / 4)"
            }
          },
          "required": ["expression"]
        }
      }
    ],
    "Resilience": {
      "Retry": {
        "Enabled": true,
        "MaxRetryAttempts": 3,
        "InitialDelayMs": 100,
        "MaxDelayMs": 5000
      },
      "CircuitBreaker": {
        "Enabled": true,
        "FailureThreshold": 5,
        "BreakDurationSeconds": 30,
        "SamplingDurationSeconds": 60
      },
      "Timeout": {
        "Enabled": true,
        "TimeoutSeconds": 30
      }
    }
  }
}